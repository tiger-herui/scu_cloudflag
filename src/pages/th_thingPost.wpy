<!--悬赏发布页面
    以 scu_ 开头的页面及组件均在该项目中预览效果
    该页面使用app.wpy引入的weui样式-->
<template>
  <view class="page">
    <view class="page__bd">
      <view class="weui-cells__title">发布一个交易吧！</view>
      <view class="weui-cells weui-cells_after-title">
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="weui-label">标题</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input" type="text" placeholder="请输入物品名称" @input="bindTitleChange"/>
          </view>
        </view>
        <view class="weui-cell weui-cell_select">
          <view class="weui-cell__hd weui-cell__hd_in-select-after">
            <view class="weui-label">选择校区</view>
          </view>
          <view class="weui-cell__bd">
            <picker @change="bindSiteChange" value="{{ siteIndex }}" range="{{ sites }}">
              <view class="weui-select weui-select_in-select-after">{{sites[siteIndex]}}</view>
            </picker>
          </view>
        </view>
      
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="weui-label">结束日期</view>
          </view>
          <view class="weui-cell__bd">
            <picker mode="date" start="2019-09-12" end="2081-09-12"  @change="bindEmpiredDateChange">
              <view class="weui-input">{{ empiredDate }}</view>
            </picker>
          </view>
        </view>
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="weui-label">选择分类</view>
          </view>
          <view class="weui-cell__bd">
            <picker mode="multiSelector" @change="bindMultiPickerChange" @columnchange="bindColumnChange" value="{{index}}" range="{{Category}}">
             <view class="weui-input" value="{{Category[0][index[0]]}},{{Category[1][index[1]]}}">
                {{Category[0][index[0]]}},{{Category[1][index[1]]}}
              </view>
            </picker>
          </view>
        </view>
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="weui-label">出售价格</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input" placeholder="请输入出售金额" @input="bindPriceInput"/>
          </view>
        </view>
      </view>
      <view class="weui-cells__title">物品描述</view>
      <view class="weui-cells weui-cells_after-title">
        <view class="weui-cell">
          <view class="weui-cell__bd">
            <textarea class="weui-textarea" placeholder="请输入物品的具体内容" style="height: 12em" @input="bindDescInput"/>
            <!-- <view class="weui-textarea-counter">0/1000</view> -->
          </view>
        </view>
      </view>
      <button class="weui-btn" type="default" @tap="chooseImage" wx:if="{{images.length < 3}}">
        添加图片
      </button>
      <view class="question-images">
        <block wx:for="{{images}}" wx:key="*this">
          <view class="q-image-wrap">
            <!-- 图片缩略图  -->
            <image class="q-image" src="{{item}}" mode="aspectFill" data-idx="{{idx}}" @tap="handleImagePreview"></image>
            <!-- 移除图片的按钮  -->
            <view class="q-image-remover" data-idx="{{idx}}" @tap="removeImage">删除</view>
          </view>
        </block>
      </view>
      <button class="weui-btn" type="primary" @tap="onSubmit">提交</button>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import { $init, $digest, uploadimg } from '../utils/util.js'

export default class extends wepy.page {
  data = {
    Category:[
      ["电子","食物","衣物","化妆品","学习相关","其他"],
      ["耳机","键盘","其他"]
    ],
    index:[0,0],        //指向分类的二级索引
    now: new Date(),
    sites: ['江安', '望江', '华西'],
    siteIndex: 0,       //指向校区的一级索引
    title: '',
    site: '江安',
    empiredDate: '',
    category1: '',
    category2: '',
    price: '',
    images: [],
    description: '',
  }

  async onLoad() {
            await wepy.login();
            this.userInfo = await wepy.getUserInfo();
            this.$apply();
        }

  async onShow(e){
            //根据第一分类选择第二个分类的数据
            this.$apply();
        }

  methods = {
    bindTitleChange(e){
      let self = this;
      console.log("标题：",e.detail.value);
      self.title = e.detail.value;
    },
    bindEmpiredDateChange(e) {
      let self = this;
      self.empiredDate = e.detail.value;
      console.log("结束日期：", this.empiredDate);
      this.$apply();
    },
    bindSiteChange(e) {
      let self = this;
      self.siteIndex = e.detail.value;
      self.site = self.sites[self.siteIndex];
      console.log("校区已修改为:", this.site);
    },
    bindPriceInput(e){
      let self = this;
      self.price = e.detail.value;
      console.log("价格已设置：", this.price);
    },
    bindDescInput(e){
      let self = this;
      self.description = e.detail.value;
      console.log("物品描述：", this.description);
    },
    async bindMultiPickerChange(e){
                this.index = e.detail.value;
                console.log("分类索引", e.detail.value);
                this.category1 = this.Category[0][this.index[0]];
                this.category2 = this.Category[1][this.index[1]];
                console.log("分类为：", this.category1, "->", this.category2);
                this.$apply();
    },
    async bindColumnChange(e){
                console.log("修改的列为",e.detail.column,",值为",e.detail.value);
                if(e.detail.column==0){
                    switch(e.detail.value){
                        case 0:
                            this.Category[1]=["耳机","键盘","其他"];
                            break;
                        case 1:
                            this.Category[1]=["零食","饮品","代金券","其他"];
                            break;
                        case 2:
                            this.Category[1]=["上衣","裤子","鞋","包","帽子","其他"];
                            break;
                        case 3:
                            this.Category[1]=["口红","粉底","眼影","其他"];
                            break;
                        case 4:
                            this.Category[1]=["教材","考研","四六级","虚拟资源","其他"];
                            break;
                        case 5:
                            this.Category[1]=["其他"];
                            break;
                    };
                }
                this.$apply();
    },
    chooseImage(res){
      let that = this;
      wx.cloud.init(); //初始化云函数接口
      wx.chooseImage({
        sizeType: ['original', 'compressed'],  //可选择原图或压缩后的图片
        sourceType: ['album', 'camera'], //可选择性开放访问相册、相机
        success: function(res){
          wx.showLoading({
          title:'上传中',
        });
        setTimeout(function(){
          wx.hideLoading()
        },2000)
        let filePath = res.tempFilePaths[0];
        const name = Math.random()*1000000;
        const  cloudPath = name + filePath.match(/\.[^.]+?/)[0];
        wx.cloud.uploadFile({
          cloudPath,
          filePath,
          success: res => {
            console.log('上传图片成功',res)
             that.setData({
               img:res.fileID
            });
             let fileID = res.fileID;

             //这里可以连接数据库，把图片路径单独存在一张表上。
            // const db = wx.cloud.database();
            // db.collection("thing_post").add({
            //   data:{
            //     img:fileID
            //   },
            //   success: function(){
            //     wx.showToast({
            //       title:'图片上传成功'
            //     })
            //   }
            // })
          }
        });
        }
      })
      
      },
 
    removeImage(e) {
      const idx = e.target.dataset.idx
      this.images.splice(idx, 1)
      $digest(this)
    },
    handleImagePreview(e) {
      const idx = e.target.dataset.idx
      const images = this.data.images
      wx.previewImage({
        current: images[idx],  //当前预览的图片
        urls: images,  //所有要预览的图片
      })
    },
    onSubmit() {
      let self = this;
      console.log(self.title);
      if (!self.title) 
      {
          wepy.showToast({
            title: '请将信息填写完整',
            icon: 'none',
            duration: 1500
          })
      } 
      else 
      {
        /** 向后端提交 */
        const db = wx.cloud.database();//连接云数据库
        db.collection('thing_post').add({
          data: {
            title:this.title,
            site:this.site,
            empiredDate:this.empiredDate,
            category1:this.category1,
            category2:this.category2,
            price:this.price,
            description:this.description,
           // img:this.fileID 这样并不能存进去
          },
          success: function(res){
            wx.showToast({
              title:'提交成功',
              icon: 'none',
              duration: 1500
            });
            wx.navigation({url:'/pages/th_thing'});
          
          },
          fail: function(res){
            wx.showToast({
              title:'提交失败',
              icon: 'none',
              duration: 1500
            })
          }
        });
        //上传函数写在util.js脚本里面了
        // uploadimg(self, this.images);
      } 
    } 
  }
  //computed属性应该放在methods外
  computed = {
  }
  onLoad() {
      let self = this
      self.startDate = self.now.toDateString();
      self.startTime = self.now.toTimeString();
      /* ####根据任务id向数据库请求任务详细数据 */
  }
}
</script>

<style lang="less">
  button {
    margin-top: 60rpx !important;
    width: 90%;
  }
</style>
