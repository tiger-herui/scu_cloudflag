<!--问答详情页面
    以 scu_ 开头的页面及组件均在该项目中预览效果
    该页面使用app.wpy引入的weui样式-->
<template>
  <view class="page">
    <scroll-view class="page__content" scroll-y="true">
      <!--文章头部，包括标题、作者、时间、标签、（分类）-->
      <view class="page__hd">
        <view class="page__title">{{ title }}</view>
        <view class="page__desc">
          <view class="taskAuthor">发起者：{{ author }}</view>
          <view class="taskDate">有效时间：{{ empiredDate }}</view>
          <view class="taskCate">地点：{{ site }}</view>
          <view class="reward">酬劳：{{ reward }}</view>
        </view>
      </view>
      <!--文章内容（最好用一个组件解析），暂时用个view占位-->
      <view class="page__bd">
        <view class="weui-article">
          <view class="weui-article__section">{{ content }}</view>
        </view>
      </view>
    </scroll-view>
    <view class="page__ft">
      <!--其中一个是接单按钮，一个咨询。点击事件没写####-->
      <button class="reserve-btn" hover-class="hover-reserve-btn" @tap="onReserveBtntap">咨询</button>
      <button
        class="accept-btn"
        hover-class="hover-accept-btn"
        @tap="onAcceptBtnTap"
        disabled="{{acceptBtnDisabled}}"
      >接单</button>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
console.debug = console.log;

export default class extends wepy.page {
  config = {
    navigationBarTitleText: '悬赏详情',
    backgroundColor: '#ffffff' // #### 这条好像冇用
  };
  data = {
    // 页面状态
    acceptBtnDisabled: false,

    // 页面数据
    id: '',
    title: '',
    author: '发布者',
    postDate: new Date(),
    empiredDate: new Date(),
    site: '',
    reward: '',
    cate: '分类',
    tags: [],
    content: ''
  };
  components = {
    // 一个解析富文本（或者只是带图片标签的文本）的组件
  };
  methods = {
    onReserveBtntap() {
      console.debug('有反应');
    },
    onAcceptBtnTap() {
      let self = this;
      // 防止多次点击
      self.acceptBtnDisabled = true;

      const db = wx.cloud.database();
      let state = -1;

      // 获取任务状态
      db.collection('reward_detail')
        .doc(self.id)
        .get()
        .then(res => {
          state = res.data.state;
          if (0 == state) {
            return db
              .collection('reward_detail')
              .doc(self.id)
              .update({
                data: {
                  state: 1,
                  accepter: ''  // 接受者的openid ####
                }
              })
          }
        })
        .then(res => {
          console.debug(res);
          wepy.navigateTo({
            url: './re_rewardTask'
          });
          wepy.showToast({
            title: '接受成功！',
            icon: 'success',
            duration: 1500
          });
        })
        .catch(err => {
          console.error(err);
          wepy.showToast({
            title: '请求服务器时发生错误',
            icon: 'loading',
            duration: 1500
          });
          state = -1;
          
        });
    }
  };
  onLoad(options) {
    let self = this;
    self.id = options.id;
    wx.cloud.init(); // #### 应该只需要初始化一次，可放在app.wpy
  }
  onShow() {
    let self = this;
    const db = wx.cloud.database();
    if (self.id) {
      // 从数据库请求问答数据，写到云函数中####
      db.collection('reward_detail')
        .doc(self.id)
        .get()
        .then(res => {
          console.debug('get detail successfully');
          self.title = res.data.title;
          self.postDate = res.data.postDate;
          self.empiredDate = res.data.empiredDate;
          self.site = res.data.site;
          self.reward = res.data.reward;
          self.content = res.data.description;
          self.tags = res.data.tags;
          self.$apply();
        })
        .catch(err => {
          console.debug(err);
        });
    }
  }
}
</script>
<style lang="less">
// @height: ;
image {
  margin: 4rpx 0;
}
.page {
  height: calc(100vh);
  width: calc(100vw);
}
.page__content {
  height: 92%;
  .page__hd {
    margin-bottom: 15rpx;
    padding: 30rpx;
  }
}
.page__ft {
  position: fixed;
  bottom: 0rpx;
  padding-bottom: 0;
  height: 8%;
  width: 100%;
  display: flex;
  button {
    margin: 0;
    height: 100%;
    border: 0;
    border-radius: 0;
    flex-grow: 1;
    &.accept-btn {
      background-color: orange;
      color: white;
    }
    &.hover-accept-btn {
      background-color: orange;
      color: black;
    }
    &.reserve-btn {
      background-color: green;
      color: #999;
    }
    &.hover-reserve-btn {
      background-color: green;
      color: black;
    }
  }
}
</style>
